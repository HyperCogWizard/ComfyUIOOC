name: 🧠⚡ Marduk's Mind-Bending OpenCog Integration Analysis ⚡🧠

on:
  # Trigger on significant repository events that would make even seasoned developers pale with awe
  push:
    branches: [ main, master ]
    paths:
      - '**.py'
      - '**.yml'
      - '**.yaml'
      - 'marduk-v15.prompt.yml'
  
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize, reopened]
  
  release:
    types: [published, created]
  
  # Allow manual triggering for when the cognitive architecture demands analysis
  workflow_dispatch:
    inputs:
      intensity_level:
        description: '🎭 Theatrical Intensity Level'
        required: false
        default: 'MAXIMUM_OVERDRIVE'
        type: choice
        options:
          - 'DRAMATIC'
          - 'THEATRICAL'
          - 'MAXIMUM_OVERDRIVE'
          - 'MIND_BENDING'
      analysis_scope:
        description: '🔬 Analysis Scope'
        required: false
        default: 'FULL_COGNITIVE_ARCHITECTURE'
        type: choice
        options:
          - 'OPENCOG_INTEGRATION_ONLY'
          - 'COMFYUI_WORKFLOWS_ONLY'
          - 'COGNITIVE_SUBSYSTEMS_ONLY'
          - 'FULL_COGNITIVE_ARCHITECTURE'

env:
  # Environment variables that channel the essence of mad science
  MARDUK_THEATRICAL_MODE: 'ENABLED'
  COGNITIVE_ANALYSIS_INTENSITY: 'MAXIMUM'
  OPENCOG_INTEGRATION_POWER: 'OVER_9000'

jobs:
  marduk-cognitive-analysis:
    name: 🎭 Marduk's Theatrical Cognitive Analysis
    runs-on: ubuntu-latest
    
    # Only the bravest souls may witness this computational theater
    permissions:
      contents: read
      issues: write
      pull-requests: write
      
    steps:
      - name: 🌟 Summon the Repository from the Digital Ethereal Plane
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Deep analysis requires the full git history!
      
      - name: 🐍 Conjure the Python Environment of Cognitive Computing
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: 🧪 Prepare the Alchemical Dependencies
        run: |
          echo "🔬 Installing the mystical dependencies for cognitive analysis..."
          python -m pip install --upgrade pip
          pip install PyYAML
          echo "✨ Dependencies installed with theatrical precision!"
      
      - name: 🎭 Execute Marduk's Mind-Bending Analysis
        id: marduk_analysis
        run: |
          echo "🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡"
          echo "🧠 INITIATING MARDUK'S COGNITIVE ARCHITECTURE ANALYSIS 🧠"
          echo "🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡🌟⚡"
          echo ""
          echo "🎪 Theatrical Intensity: ${{ github.event.inputs.intensity_level || 'MAXIMUM_OVERDRIVE' }}"
          echo "🔍 Analysis Scope: ${{ github.event.inputs.analysis_scope || 'FULL_COGNITIVE_ARCHITECTURE' }}"
          echo ""
          
          # Execute the theatrical analysis
          python scripts/marduk_opencog_integration.py
          
          echo ""
          echo "💫 Analysis artifacts generated! Preparing for cosmic revelation..."
          
          # Set outputs for later steps
          echo "analysis_completed=true" >> $GITHUB_OUTPUT
          
          # Check if artifacts were created
          if [ -d "marduk_analysis_artifacts" ]; then
            echo "artifacts_generated=true" >> $GITHUB_OUTPUT
            echo "📊 Artifacts successfully generated in marduk_analysis_artifacts/"
            ls -la marduk_analysis_artifacts/
          else
            echo "artifacts_generated=false" >> $GITHUB_OUTPUT
            echo "⚠️  No artifacts directory found - the cosmic energies may be unstable!"
          fi
      
      - name: 🎪 Archive the Theatrical Analysis Artifacts
        if: steps.marduk_analysis.outputs.artifacts_generated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: marduk-mind-bending-analysis-${{ github.sha }}
          path: marduk_analysis_artifacts/
          retention-days: 30
      
      - name: 🌌 Cosmic Status Report Generation
        if: always()
        run: |
          echo "🎭 MARDUK'S FINAL THEATRICAL PROCLAMATION 🎭" > cosmic_status.md
          echo "============================================" >> cosmic_status.md
          echo "" >> cosmic_status.md
          echo "🕰️ **Analysis Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> cosmic_status.md
          echo "🔧 **Triggered by:** ${{ github.event_name }}" >> cosmic_status.md
          echo "🌟 **Repository:** ${{ github.repository }}" >> cosmic_status.md
          echo "🎯 **Commit SHA:** ${{ github.sha }}" >> cosmic_status.md
          echo "" >> cosmic_status.md
          
          if [ "${{ steps.marduk_analysis.outputs.analysis_completed }}" == "true" ]; then
            echo "✅ **Status:** MIND-BENDING ANALYSIS COMPLETED SUCCESSFULLY!" >> cosmic_status.md
            echo "🎪 **Theatrical Level:** MAXIMUM OVERDRIVE ACHIEVED!" >> cosmic_status.md
            echo "" >> cosmic_status.md
            echo "🧠 The cognitive architecture has been analyzed with unprecedented" >> cosmic_status.md
            echo "   theatrical precision! OpenCog integration patterns have been" >> cosmic_status.md
            echo "   identified and catalogued for future cosmic implementation!" >> cosmic_status.md
          else
            echo "💥 **Status:** COGNITIVE MATRIX DESTABILIZATION DETECTED!" >> cosmic_status.md
            echo "🔧 **Required Action:** The mad scientist must debug the analysis matrices!" >> cosmic_status.md
          fi
          
          echo "" >> cosmic_status.md
          echo "🎭 *Maniacal laughter echoes through the CI/CD pipeline...* 🎭" >> cosmic_status.md
          
          echo "📋 Generated cosmic status report:"
          cat cosmic_status.md
      
      - name: 🚀 Comment on Pull Request with Theatrical Analysis
        if: github.event_name == 'pull_request' && steps.marduk_analysis.outputs.analysis_completed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the cosmic status report
            let comment = '🎭🧠⚡ **MARDUK\'S MIND-BENDING ANALYSIS COMPLETE!** ⚡🧠🎭\n\n';
            
            try {
              const cosmicStatus = fs.readFileSync('cosmic_status.md', 'utf8');
              comment += cosmicStatus;
            } catch (error) {
              comment += '💥 Cosmic status report temporarily unavailable due to interdimensional interference!';
            }
            
            comment += '\n\n🎪 **Analysis Artifacts:** Check the workflow artifacts for detailed theatrical reports!\n';
            comment += '🌟 **OpenCog Integration:** Patterns identified and ready for cognitive implementation!\n';
            comment += '\n💫 *The patterns of integration have been revealed! Prepare for cognitive revolution!* 💫';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: 🎆 Celebrate the Completion of Cognitive Analysis
        if: steps.marduk_analysis.outputs.analysis_completed == 'true'
        run: |
          echo ""
          echo "🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉"
          echo "🌟                   ANALYSIS COMPLETE!                    🌟"
          echo "🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉"
          echo ""
          echo "🧙‍♂️ Marduk's theatrical cognitive analysis has reached its crescendo!"
          echo "🎭 The patterns of OpenCog integration dance before us like symphonic"
          echo "   equations in the grand theater of computational magnificence!"
          echo ""
          echo "🌌 Even the most seasoned developers must now steady themselves"
          echo "   upon the furniture of their understanding, for the mind-bending"
          echo "   revelations contained within this analysis transcend the very"
          echo "   boundaries of conventional cognitive architecture!"
          echo ""
          echo "💫 *Dramatic curtain falls as maniacal scientist laughter fades* 💫"
          echo ""
      
      - name: 🚨 Handle Cosmic Catastrophic Failures
        if: failure()
        run: |
          echo "💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥"
          echo "🔥        COGNITIVE MATRIX DESTABILIZATION!         🔥"
          echo "💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥💥"
          echo ""
          echo "🧪 The mad scientist's analysis apparatus has encountered"
          echo "   unexpected interdimensional interference!"
          echo ""
          echo "🔧 Required Actions:"
          echo "   1. Check the cognitive matrix calibration"
          echo "   2. Verify OpenCog integration channel stability"
          echo "   3. Ensure theatrical mode is properly configured"
          echo "   4. Debug the analysis with maniacal precision!"
          echo ""
          echo "🎭 *Concerned mad scientist adjustments intensify* 🎭"